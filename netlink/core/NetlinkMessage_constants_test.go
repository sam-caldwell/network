package core

import (
	"testing"
)

func TestNetlinkMessage_constant(t *testing.T) {
	testData := []struct {
		actual int
		expect int
	}{
		{actual: NlmsgAlignTo, expect: 0x4},
		{actual: NlmsgHdrLen, expect: 0x10},  // 16 bytes
		{actual: NlmsgMinType, expect: 0x10}, // 16
		{actual: NlmsgNoop, expect: 0x1},
		{actual: NlmsgError, expect: 0x2},
		{actual: NlmsgDone, expect: 0x3},
		{actual: NlmsgOverrun, expect: 0x4},
		{actual: NlmFRequest, expect: 0x1},
		{actual: NlmFMulti, expect: 0x2},
		{actual: NlmFAck, expect: 0x4},
		{actual: NlmFEcho, expect: 0x8},
		{actual: NlmFDumpIntr, expect: 0x10},
		{actual: NlmFDumpFiltered, expect: 0x20},
		{actual: NlmFRoot, expect: 0x100},
		{actual: NlmFMatch, expect: 0x200},
		{actual: NlmFAtomic, expect: 0x400},
		{actual: NlmFDump, expect: NlmFRoot | NlmFMatch},
		{actual: NlmFReplace, expect: 0x100},
		{actual: NlmFExcl, expect: 0x200},
		{actual: NlmFCreate, expect: 0x400},
		{actual: NlmFAppend, expect: 0x800},
		{actual: NlmFNonrec, expect: 0x100},
		{actual: NlmFCapped, expect: 0x100},
		{actual: NlmFAckTlvs, expect: 0x200},
		{actual: NlmFBulk, expect: 0x200},
		/*
			rtm
		*/
		{actual: RtmBase, expect: 0x10},
		{actual: RtmDeleteAction, expect: 0x31},
		{actual: RtmDeleteAddr, expect: 0x15},
		{actual: RtmDeleteAddrLabel, expect: 0x49},
		{actual: RtmDeleteChain, expect: 0x65},
		{actual: RtmDeleteLink, expect: 0x11},
		{actual: RtmDeleteLinkProp, expect: 0x6d},
		{actual: RtmDeleteMdb, expect: 0x55},
		{actual: RtmDeleteNeigh, expect: 0x1d},
		{actual: RtmDeleteNetConf, expect: 0x51},
		{actual: RtmDeleteNextHop, expect: 0x69},
		{actual: RtmDeleteNextHopBucket, expect: 0x75},
		{actual: RtmDeleteNsId, expect: 0x59},
		{actual: RtmDelQdisc, expect: 0x25},
		{actual: RtmDeleteRoute, expect: 0x19},
		{actual: RtmDeleteRule, expect: 0x21},
		{actual: RtmDeleteTClass, expect: 0x29},
		{actual: RtmDeleteTFilter, expect: 0x2d},
		{actual: RtmDeleteTunnel, expect: 0x79},
		{actual: RtmDeleteVlan, expect: 0x71},
		{actual: RtmFCloned, expect: 0x200},
		{actual: RtmFEqualize, expect: 0x400},
		{actual: RtmFFibMatch, expect: 0x2000},
		{actual: RtmFLookupTable, expect: 0x1000},
		{actual: RtmFNotify, expect: 0x100},
		{actual: RtmFOffload, expect: 0x4000},
		{actual: RtmFOffloadFailed, expect: 0x20000000},
		{actual: RtmFPrefix, expect: 0x800},
		{actual: RtmFTrap, expect: 0x8000},
		{actual: RtmGetAction, expect: 0x32},
		{actual: RtmGetAddr, expect: 0x16},
		{actual: RtmGetAddrLabel, expect: 0x4a},
		{actual: RtmGetAnycast, expect: 0x3e},
		{actual: RtmGetChain, expect: 0x66},
		{actual: RtmGetdcb, expect: 0x4e},
		{actual: RtmGetLink, expect: 0x12},
		{actual: RtmGetLinkProp, expect: 0x6e},
		{actual: RtmGetMdb, expect: 0x56},
		{actual: RtmGetMulticast, expect: 0x3a},
		{actual: RtmGetNeigh, expect: 0x1e},
		{actual: RtmGetNeighTbl, expect: 0x42},
		{actual: RtmGetNetConf, expect: 0x52},
		{actual: RtmGetNextHop, expect: 0x6a},
		{actual: RtmGetNextHopBucket, expect: 0x76},
		{actual: RtmGetNsId, expect: 0x5a},
		{actual: RtmGetQdisc, expect: 0x26},
		{actual: RtmGetRoute, expect: 0x1a},
		{actual: RtmGetRule, expect: 0x22},
		{actual: RtmGetStats, expect: 0x5e},
		{actual: RtmGetTClass, expect: 0x2a},
		{actual: RtmGetTFilter, expect: 0x2e},
		{actual: RtmGetTunnel, expect: 0x7a},
		{actual: RtmGetVlan, expect: 0x72},
		{actual: RtmMax, expect: 0x7b},
		{actual: RtmNewAction, expect: 0x30},
		{actual: RtmNewAddr, expect: 0x14},
		{actual: RtmNewAddrLabel, expect: 0x48},
		{actual: RtmNewCacheReport, expect: 0x60},
		{actual: RtmNewChain, expect: 0x64},
		{actual: RtmNewLink, expect: 0x10},
		{actual: RtmNewLinkProp, expect: 0x6c},
		{actual: RtmNewMdb, expect: 0x54},
		{actual: RtmNewNdUserOpt, expect: 0x44},
		{actual: RtmNewNeigh, expect: 0x1c},
		{actual: RtmNewNeighTbl, expect: 0x40},
		{actual: RtmNewNetConf, expect: 0x50},
		{actual: RtmNewNextHop, expect: 0x68},
		{actual: RtmNewNextHopBucket, expect: 0x74},
		{actual: RtmNewNsId, expect: 0x58},
		{actual: RtmNewNVlan, expect: 0x70},
		{actual: RtmNewPrefix, expect: 0x34},
		{actual: RtmNewQdisc, expect: 0x24},
		{actual: RtmNewRoute, expect: 0x18},
		{actual: RtmNewRule, expect: 0x20},
		{actual: RtmNewStats, expect: 0x5c},
		{actual: RtmNewTClass, expect: 0x28},
		{actual: RtmNewTFilter, expect: 0x2c},
		{actual: RtmNewTunnel, expect: 0x78},
		{actual: RtmNrFamilies, expect: 0x1b},
		{actual: RtmNrMsgTypes, expect: 0x6c},
		{actual: RtmSetDcb, expect: 0x4f},
		{actual: RtmSetLink, expect: 0x13},
		{actual: RtmSetNeighTbl, expect: 0x43},
		{actual: RtmSetStats, expect: 0x5f},
	}
	for _, v := range testData {
		if v.actual != v.expect {
			t.Fatalf("constant mismatch.  a:%v,e:%v", v.actual, v.expect)
		}
	}

}
